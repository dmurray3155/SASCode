/*==================================================================================================*
 | Program	:	importETSCSV.sas																																			|
 | Author		:	Don Murray (for Smarter Balanced)																											|
 | Purpose	:	Build CSV import job for ETS source data CSV files.																		|
 | Macros		: itidittyp_logic (included as itidittyp_logic.sas was generated by read_itid_ittyp.sas	|
 |						as well as other macros from my toolbox.sas or as defined within this code.						|
 | Notes		:	The target CSV file is one created by CAItemDataFromXML.py.														|
 |	2024-02-18 -	Update: The line above was written and the python script employed because at			|
 |								that time the summative data was delivered as zipped, bundled TRT exports.				|
 |								This instance will use the response data files from ETS.													|
 | Usage		:	Applicable to Measurement Inc IA And calibration data preparation work.								|
 |--------------------------------------------------------------------------------------------------|
 | AMENDMENT HISTORY:																																								|
 |	..date..... 	....description.................................................................. |
 |	2018 11 24		Initial development. This deliberate engineering is because I found that the SAS	|
 |								Enterprise Guide importer produced results with inconsistent formats.							|
 |	2019 10 16		This was migrated to the 1819 project location and modified for use here.  Major	|
 |								change is the additional generic variables under opportunity to convey guids for	|
 |								CAT and PT portions in the ETS TRT data (look for guid*** variables).							|
 |	2024 02 17		Copied from 2018-19 project for use here for 2022-23. See note above, dated				|
 |								2024-02-18. Consequently, this code will be substantially re-written. A GitHub		|
 |								initial check-in is made to establish context and continuity.											|
 |	2024 02 26		Nearly completed.  Still need to process response content.												|
 *==================================================================================================*/
%let workhere=D:\SBAC\2022_23\IA_Calib;
libName IACal "&workhere.";
%include "&workhere.\SetSessionEnv.sas";

options nosymbolgen nomprint nomlogic;

%macro VarFmtLst;
        opportunityguid  $CHAR36.									jnk1             $CHAR1.
        itemkey          BEST6.										jnk2             $CHAR1.
        bankkey          BEST5.										jnk3             $CHAR1.
        position         BEST2.										jnk4             $CHAR1.
        pagetime         BEST8.										jnk5             $CHAR1.
        pagenumber       BEST2.										jnk6             $CHAR1.
        pagevisits       BEST2.										jnk7             $CHAR1.
        numbervisits     BEST2.										jnk8             $CHAR1.
        admindate        DATETIME18.							jnk9             $CHAR1.
        operational      BEST1.										jnk10            $CHAR1.
        dropped          BEST1.										jnk11            $CHAR1.
        isselected       BEST1.										jnk12            $CHAR1.
        score            BEST1.										jnk13            $CHAR1.
        segmentid        $CHAR72.									jnk14            $CHAR1.
        scorestatus      $CHAR12.									jnk15            $CHAR1.
        responsedate     DATETIME18.							jnk16            $CHAR1.
        responsekey      $CHAR36.									jnk17            $CHAR1.
        response         $CHAR32500.							jnk18            $CHAR1.
        scoreinfodimension $CHAR1.								jnk19            $CHAR1.
        singledimensionscorepoints $CHAR6.				jnk20            $CHAR1.
        subscoredimensions $CHAR5.								jnk21            $CHAR1.
        multidimensionsubscorepoints $CHAR1.			itemtype				 $CHAR4.
        interaxion $32. presponse $32500.;
%mend VarFmtLst;

%include "&workhere.\itidittyp_logic.sas";

%macro importETS(Grd, Cont, CntGrd, infyl, outDS);
	libname sbjgrd "&workhere.\&CntGrd.";
	data &outDS. (compress = yes  drop = %do vr = 1 %to 21;  jnk&vr.  %end; response	);
    LENGTH
        opportunityguid  $ 36						jnk1             $ 1
        itemkey            8						jnk2             $ 1
        bankkey            8						jnk3             $ 1
        position           8						jnk4             $ 1
        pagetime           8						jnk5             $ 1
        pagenumber         8						jnk6             $ 1
        pagevisits         8						jnk7             $ 1
        numbervisits       8						jnk8             $ 1
        admindate          8						jnk9             $ 1
        operational        8						jnk10            $ 1
        dropped            8						jnk11            $ 1
        isselected         8						jnk12            $ 1
        score              8						jnk13            $ 1
        segmentid        $ 72						jnk14            $ 1
        scorestatus      $ 9						jnk15            $ 1
        responsedate       8						jnk16            $ 1
        responsekey      $ 36						jnk17            $ 1
        response         $ 32500				jnk18            $ 1
        scoreinfodimension $ 1					jnk19            $ 1
        singledimensionscorepoints $ 6	jnk20            $ 1
        subscoredimensions $ 5					jnk21            $ 1
        multidimensionsubscorepoints $ 1  itemtype $ 4 
        interaxion $ 32 				presponse $ 32500 ;
		format %VarFmtLst;
		informat %VarFmtLst;
		INFILE "&workhere.\ETSCSV\&infyl."
        LRECL=32767
        FIRSTOBS=2
        ENCODING="WLATIN1"
        DLM='5e'x
        MISSOVER
        DSD ;
    INPUT
        opportunityguid  $										jnk1   $
        itemkey  												      jnk2   $
        bankkey  											        jnk3   $
        position											        jnk4   $
        pagetime 											        jnk5  $
        pagenumber 										        jnk6  $
        pagevisits 										        jnk7  $ 
        numbervisits 					   				 			jnk8  $
        admindate        : ?? ANYDTDTM23.			jnk9  $ 
        operational														jnk10  $
        dropped																jnk11  $
        isselected														jnk12  $
        score																	jnk13  $
        segmentid  $													jnk14  $
        scorestatus  $												jnk15  $
        responsedate     : ?? ANYDTDTM23.			jnk16  $
        responsekey  $												jnk17  $
        response  $														jnk18  $
        scoreinfodimension  $									jnk19  $
        singledimensionscorepoints  $					jnk20  $
        subscoredimensions  $									jnk21  $
        multidimensionsubscorepoints  $ ;
		%itidittyp_logic;
		if responsekey = '' then do;
			interaxion = '';
			presponse = '';
		end;
		else do;
			interaxion = substr(response, index(response, '=\\\"') + 5, index(response, '\\\">') - index(response, '=\\\"') - 5) ;
			if interaxion in ('choiceInteraction_1.RESPONSE\\\"', 'matchInteraction_1.RESPONSE\\\"/') then presponse = '';
			else if interaxion = 'choiceInteraction_1.RESPONSE' then presponse = substr(response, index(response, '<itemResponse>') + 98, 1);
			else if interaxion = 'gridInteraction_1.CUSTOM' then presponse = 'Response not retained';
			else if interaxion = 'matchInteraction_1.RESPONSE\\\"/' and index(response, '<itemResponse><response id=\\\"matchInteraction_1.RESPONSE\\\"/><\\/itemResponse>') > 0 then presponse = '';
			else if interaxion = 'textEntryInteraction_1.RESPONSE' and 
				((index(response, '<itemResponse><response id=\\\"textEntryInteraction_1.RESPONSE\\\"><\\/response><\\/itemResponse>') > 0) or 
				 (index(response, '<itemResponse><response id=\\\"textEntryInteraction_1.RESPONSE\\\"><value><\\/value><\\/response><\\/itemResponse>') > 0 ))
				then presponse = '';
			else if interaxion = 'textEntryInteraction_1.RESPONSE' and index(response, '<\\/value>') = 0 then presponse = 'Response is malformed';
			else presponse = substr(response, index(response, '<value>') + 7, index(response, '<\\/value>') - index(response, '<value>') - 7);
		end;
	run;
	proc datasets library=bigFast;
		modify &CntGrd._ETSSrc;
		index create opportunityguid;
		index create itemkey;
	run;

%mend importETS;
%*	%importETS(3, MATH, math03,
		SBAC_Summative_Response_MATH_Grade_03_Test_Results_2023_09_27_13_46_16_merge_fixed.csv,
		bigfast.math03_etssrc);
%*	%importETS(4, MATH, math04,
		SBAC_Summative_Response_MATH_Grade_04_Test_Results_2023_09_27_13_46_16_merge_fixed.csv,
		bigfast.math04_etssrc);


%macro importETS(CntGrd);
	%SetDSLabel;
	data bigFast.&CntGrd._ETSSrc (compress=yes label="&DSLabel.");
		length stateabbreviation $ 2
					syend 4										subject $ 4								grade $ 2
					oppID $ 16								oppKey $ 36								OverallThStr $ 8
					overallThetaScore 8				OverallSSStr $ 6
					overallScaleScore 4				componVal1 $ 16						componVal1Num 8
					componVal2 $ 16						componVal2Num 8
					componContext1 $ 3				componContext2 $ 2				guidVal1 $ 36
					guidContext1 $ 3					guidVal2 $ 36							guidContext2 $ 3
					studentId $ 64
					itemPosition 3						itemPageNumber 3					itemPageTime 8
					itemPageVisits 3					itemNumberVisits 3				itemFormat $ 4
					itemAdminDateTime $ 23		itemId $ 14								itemOper 3
					itemDropped 3							itemIsSelected 3					itemScore $ 2
					itemScoreStatus $ 9				itemMimeType $ 10					itemSegmentId $ 56
					itmSubScoreDim $ 7				itmScorePoint $ 2					itmScoreCC $ 1
					itmScoreInfoStatus $ 8		itmSubScrDimA $ 2					itmSubScrCCDimA $ 1
					itmSubScrDimAStatus $ 9		itmSubScrDimB $ 2					itmSubScrCCDimB $ 1
					itmSubScrDimBStatus $ 9		itmSubScrDimC $ 2					itmSubScrCCDimC $ 1
					itmSubScrDimCStatus $ 9		itmSubScrDimD $ 2					itmSubScrCCDimD $ 1
					itmSubScrDimDStatus $ 9		itemRespDate $ 23					itemRespType $ 4
					itemRespKey $ 36					itemRespPre $ 712.				itemResponse $ 24
					catBool 3									EBSR_Part1 $ 11						EBSR_Part2 $ 11;
		format	%VarFmtLst; ;
		informat	%VarFmtLst; ;
		infile "&workhere.\ETSCSV\&CntGrd._18-19_ItemData_.csv" lrecl=1200 firstobs=2 dlm=',' dsd;
		input stateabbreviation $  syend   subject $  grade $  oppId $  oppKey $  OverallThStr $  OverallSSStr $
					componVal1 $  componContext1 $  componVal2 $  componContext2 $ guidVal1 $  guidContext1 $
					guidVal2 $  guidContext2 $  studentId $
					itemPosition  itemPageNumber  itemPageTime  itemPageVisits  itemNumberVisits
					itemFormat $  itemAdminDateTime $  itemId $  itemOper  itemDropped  itemIsSelected
					itemScore $  itemScoreStatus $  itemMimeType $  itemSegmentId $  itmSubScoreDim $
					itmScorePoint $  itmScoreCC $  itmScoreInfoStatus $  itmSubScrDimA $  itmSubScrCCDimA  $
					itmSubScrDimAStatus $  itmSubScrDimB $  itmSubScrCCDimB $  itmSubScrDimBStatus $
					itmSubScrDimC $  itmSubScrCCDimC $  itmSubScrDimCStatus $  itmSubScrDimD $
					itmSubScrCCDimD $  itmSubScrDimDStatus $  itemRespDate $  itemRespType $  itemRespKey $
					itemRespPre $;
		/* Parse item response pieces	*/
		if itemFormat = 'EBSR' then do;
			/*	Remove the itemResponse open and close tags to unify the structure of the two parts		*/
			itemRespPre = tranwrd(itemRespPre, '<itemResponse>', '');
			itemRespPre = trim(left(tranwrd(itemRespPre, '</itemResponse>', '')));
			/*	Split the two parts	*/
			if substr(itemRespPre, 1, 45) = '<response id="choiceInteraction_1.RESPONSE"/>' then EBSR_Split_Loc = 46;
			else EBSR_Split_Loc = index(itemRespPre, '</response><response id="choiceInteraction_2.RESPONSE"') + 11;
			EBSR_Part1_str=substr(itemRespPre, 1, EBSR_Split_Loc - 1);
			EBSR_Part2_str=substr(itemRespPre, EBSR_Split_Loc);
			%do prt = 1 %to 2;
				RespFieldLen = length(EBSR_Part&prt._str);
				select(RespFieldLen);
					when(1) EBSR_Part&prt. = '';
					when(45) EBSR_Part&prt. = '';
					when(98) EBSR_Part&prt. = compress(substr(EBSR_Part&prt._str, 79, 1));
					when(141) EBSR_Part&prt. = compress(substr(EBSR_Part&prt._str, 79, 1)||'|'||substr(EBSR_Part&prt._str, 122, 1));
					when(184) EBSR_Part&prt. = compress(substr(EBSR_Part&prt._str, 79, 1)||'|'||substr(EBSR_Part&prt._str, 122, 1)||'|'||substr(EBSR_Part&prt._str, 165, 1));
					when(227) EBSR_Part&prt. = compress(substr(EBSR_Part&prt._str, 79, 1)||'|'||substr(EBSR_Part&prt._str, 122, 1)||'|'||substr(EBSR_Part&prt._str, 165, 1)||'|'||
										substr(EBSR_Part&prt._str, 208, 1));
					when(270) EBSR_Part&prt. = compress(substr(EBSR_Part&prt._str, 79, 1)||'|'||substr(EBSR_Part&prt._str, 122, 1)||'|'||substr(EBSR_Part&prt._str, 165, 1)||'|'||
										substr(EBSR_Part&prt._str, 208, 1)||'|'||substr(EBSR_Part&prt._str, 251, 1));
					when(313) EBSR_Part&prt. = compress(substr(EBSR_Part&prt._str, 79, 1)||'|'||substr(EBSR_Part&prt._str, 122, 1)||'|'||substr(EBSR_Part&prt._str, 165, 1)||'|'||
										substr(EBSR_Part&prt._str, 208, 1)||'|'||substr(EBSR_Part&prt._str, 251, 1)||'|'||substr(EBSR_Part&prt._str, 294, 1));
					when(356) EBSR_Part&prt. = compress(substr(EBSR_Part&prt._str, 79, 1)||'|'||substr(EBSR_Part&prt._str, 122, 1)||'|'||substr(EBSR_Part&prt._str, 165, 1)||'|'||
										substr(EBSR_Part&prt._str, 208, 1)||'|'||substr(EBSR_Part&prt._str, 251, 1)||'|'||substr(EBSR_Part&prt._str, 294, 1)||'|'||substr(EBSR_Part&prt._str, 337, 1));
					otherwise do;
						EBSR_Part&prt. = "PROB.E&prt.";
						put "Problem with field length for EBSR part &prt.: " studentId ' - ' itemId ' - ' RespFieldLen ;
					end;
				end;		/*	select		*/
			%end;
			itemResponse = compress(EBSR_Part1||';'||EBSR_Part2);
		end;
		else if itemFormat in ('MC', 'MS') then do;
			itemRespPre = tranwrd(itemRespPre, '<itemResponse>', '');
			itemRespPre = trim(left(tranwrd(itemRespPre, '</itemResponse>', '')));
			RespFieldLen = length(itemRespPre);
			select(RespFieldLen);
				when(1) itemResponse = '';
				when(45) itemResponse = '';
				when(98) itemResponse = compress(substr(itemRespPre, 79, 1));
				when(141) itemResponse = compress(substr(itemRespPre, 79, 1)||'|'||substr(itemRespPre, 122, 1));
				when(184) itemResponse = compress(substr(itemRespPre, 79, 1)||'|'||substr(itemRespPre, 122, 1)||'|'||substr(itemRespPre, 165, 1));
				when(227) itemResponse = compress(substr(itemRespPre, 79, 1)||'|'||substr(itemRespPre, 122, 1)||'|'||substr(itemRespPre, 165, 1)||'|'||
									substr(itemRespPre, 208, 1));
				when(270) itemResponse = compress(substr(itemRespPre, 79, 1)||'|'||substr(itemRespPre, 122, 1)||'|'||substr(itemRespPre, 165, 1)||'|'||
									substr(itemRespPre, 208, 1)||'|'||substr(itemRespPre, 251, 1));
				when(313) itemResponse = compress(substr(itemRespPre, 79, 1)||'|'||substr(itemRespPre, 122, 1)||'|'||substr(itemRespPre, 165, 1)||'|'||
									substr(itemRespPre, 208, 1)||'|'||substr(itemRespPre, 251, 1)||'|'||substr(itemRespPre, 294, 1));
				when(356) itemResponse = compress(substr(itemRespPre, 79, 1)||'|'||substr(itemRespPre, 122, 1)||'|'||substr(itemRespPre, 165, 1)||'|'||
									substr(itemRespPre, 208, 1)||'|'||substr(itemRespPre, 251, 1)||'|'||substr(itemRespPre, 294, 1)||'|'||substr(itemRespPre, 337, 1));
				when(399) itemResponse = compress(substr(itemRespPre, 79, 1)||'|'||substr(itemRespPre, 122, 1)||'|'||substr(itemRespPre, 165, 1)||'|'||
									substr(itemRespPre, 208, 1)||'|'||substr(itemRespPre, 251, 1)||'|'||substr(itemRespPre, 294, 1)||'|'||substr(itemRespPre, 337, 1)||'|'||
									substr(itemRespPre, 380, 1));
				otherwise do;
					itemResponse = "PROB";
					put "Problem with field length for: " studentId ' - ' itemId ' - ' RespFieldLen;
				end;
			end;		/*	select		*/
		end;
		else do;
			itemResponse = compress(itemRespPre);
		end;
		oppKey = upcase(oppKey);
		componval1Num = put(componval1, 16.0);
		componval2Num = put(componval2, 16.0);
		guidVal1 = upcase(guidVal1);
		guidVal2 = upcase(guidVal2);
		catBool = ifn(index(ItemSegmentId, 'CAT') > 0, 1, 0);
		/*	Line above is equivalent to two lines below.  Tip is featured in this webpage: */
		/*	https://www.quanticate.com/blog/4-sas-tips-in-clinical-programming	*/
		/*	if index(ItemSegmentId, 'ADAPTIVE') > 0 then catBool = 1;
				else catBool=0;  */
		if OverallThStr = 'NS' then overallThetaScore = .;
		else overallThetaScore = put(overallThStr, 8.4);
		if OverallSSStr = 'NS' then OverallScaleScore = .;
		else overallScaleScore = put(overallSSStr, 4.0);
		drop OverallThStr overallSSStr ItemRespPre
			 EBSR_Split_Loc EBSR_Part1_str EBSR_Part2_str EBSR_Part1 EBSR_Part2 RespFieldLen;
	run;
	/*	Create indices for more rapid search returns in downstream processing	*/
	proc datasets library=bigFast;
		modify &CntGrd._ETSSrc;
		index create guidVal1;
		index create guidVal2;
		index create itemId;
	run;
%mend importETS;
%*	%importETS(ela03);
%*	%importETS(ela04);
%*	%importETS(ela05);
%*	%importETS(ela06);
%*	%importETS(ela07);
%*	%importETS(ela08);
%*	%importETS(ela11);

%*	%importETS(math03);
%*	%importETS(math04);
%*	%importETS(math05);
%*	%importETS(math06);
%*	%importETS(math07);
%*	%importETS(math08);
%*	%importETS(math11);
